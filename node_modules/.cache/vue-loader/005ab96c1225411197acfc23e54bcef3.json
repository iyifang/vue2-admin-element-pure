{"remainingRequest":"D:\\Demo\\新建文件夹\\vue2-admin-element-pure\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Demo\\新建文件夹\\vue2-admin-element-pure\\src\\views\\function\\leetCode\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Demo\\新建文件夹\\vue2-admin-element-pure\\src\\views\\function\\leetCode\\index.vue","mtime":1661995837990},{"path":"D:\\Demo\\新建文件夹\\vue2-admin-element-pure\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Demo\\新建文件夹\\vue2-admin-element-pure\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Demo\\新建文件夹\\vue2-admin-element-pure\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Demo\\新建文件夹\\vue2-admin-element-pure\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG1ldGhvZHM6IHsNCiAgICAvLyDkuKTmlbDkuYvlkowNCiAgICBmbihudW1zLCB0YXJnZXQpIHsNCiAgICAgIC8qIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtcy5sZW5ndGg7IGkrKykgew0KICAgICAgICBmb3IgKGxldCBqID0gaSArIDE7IGogPCBudW1zLmxlbmd0aDsgaisrKSB7DQogICAgICAgICAgaWYgKG51bXNbaV0gKyBudW1zW2pdID09PSB0YXJnZXQpIHsNCiAgICAgICAgICAgIHJldHVybiBbaSwgal07DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgICByZXR1cm4gW107ICovDQoNCiAgICAgIGxldCBoYXNoID0ge307DQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bXMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgaWYgKGhhc2hbdGFyZ2V0IC0gbnVtc1tpXV0gIT09IHVuZGVmaW5lZCkgew0KICAgICAgICAgIHJldHVybiBbaSwgaGFzaFt0YXJnZXQgLSBudW1zW2ldXV07DQogICAgICAgIH0NCiAgICAgICAgaGFzaFtudW1zW2ldXSA9IGk7DQogICAgICB9DQogICAgICByZXR1cm4gW107DQogICAgfSwNCiAgICBjaGFuZ2VGbigpIHsNCiAgICAgIGNvbnN0IG51bXMgPSBbMiwgNywgMTEsIDE1XTsNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZm4obnVtcywgOSkpOw0KICAgIH0sDQoNCiAgICAvLyDkuozliIbmn6Xmib4NCiAgICBiaW5hcnlTZWFyY2gobnVtcywgdGFyZ2V0KSB7DQogICAgICAvLyByaWdodOaYr+aVsOe7hOacgOWQjuS4gOS4quaVsOeahOS4i+agh++8jG51bVtyaWdodF3lnKjmn6Xmib7ojIPlm7TlhoXvvIzmmK/lt6bpl63lj7Ppl63ljLrpl7QNCiAgICAgIGxldCBsZWZ0ID0gMCwgLy8g5bem6L6555WMDQogICAgICAgIHJpZ2h0ID0gbnVtcy5sZW5ndGggLSAxOyAvLyDlj7PovrnnlYwNCiAgICAgIHdoaWxlIChsZWZ0IDw9IHJpZ2h0KSB7DQogICAgICAgIGxldCBtaWRkbGUgPSBNYXRoLmZsb29yKChsZWZ0ICsgcmlnaHQpIC8gMik7IC8vIOWPluS4remXtOWAvA0KICAgICAgICBpZiAobnVtc1ttaWRkbGVdID4gdGFyZ2V0KSB7DQogICAgICAgICAgLy8g5Y675bem6L65DQogICAgICAgICAgLy8g5pu05paw5Y+z6L6555WMDQogICAgICAgICAgcmlnaHQgPSBtaWRkbGUgLSAxOw0KICAgICAgICB9IGVsc2UgaWYgKG51bXNbbWlkZGxlXSA8IHRhcmdldCkgew0KICAgICAgICAgIC8vIOWOu+WPs+i+uQ0KICAgICAgICAgIC8vIOabtOaWsOW3pui+ueeVjA0KICAgICAgICAgIGxlZnQgPSBtaWRkbGUgKyAxOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHJldHVybiBtaWRkbGU7DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIC0xOw0KICAgICAgfQ0KICAgIH0sDQogICAgY2hhbmdlQlMoKSB7DQogICAgICBjb25zdCBudW1zID0gWzIsIDcsIDEsIDksIDExLCAxNV07DQogICAgICAvLyB0aGlzLmJpbmFyeVNlYXJjaChudW1zLCA5KTsNCiAgICAgIGNvbnNvbGUuaW5mbyh0aGlzLmJpbmFyeVNlYXJjaChudW1zLCA5KSk7DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/function/leetCode","sourcesContent":["<template>\r\n  <div class=\"leet-code\">\r\n    <el-button type=\"primary\" @click=\"changeFn\">两数之和</el-button>\r\n    <el-button type=\"primary\" @click=\"changeBS\">二分查找</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    // 两数之和\r\n    fn(nums, target) {\r\n      /* for (let i = 0; i < nums.length; i++) {\r\n        for (let j = i + 1; j < nums.length; j++) {\r\n          if (nums[i] + nums[j] === target) {\r\n            return [i, j];\r\n          }\r\n        }\r\n      }\r\n      return []; */\r\n\r\n      let hash = {};\r\n      for (let i = 0; i < nums.length; i++) {\r\n        if (hash[target - nums[i]] !== undefined) {\r\n          return [i, hash[target - nums[i]]];\r\n        }\r\n        hash[nums[i]] = i;\r\n      }\r\n      return [];\r\n    },\r\n    changeFn() {\r\n      const nums = [2, 7, 11, 15];\r\n      console.log(this.fn(nums, 9));\r\n    },\r\n\r\n    // 二分查找\r\n    binarySearch(nums, target) {\r\n      // right是数组最后一个数的下标，num[right]在查找范围内，是左闭右闭区间\r\n      let left = 0, // 左边界\r\n        right = nums.length - 1; // 右边界\r\n      while (left <= right) {\r\n        let middle = Math.floor((left + right) / 2); // 取中间值\r\n        if (nums[middle] > target) {\r\n          // 去左边\r\n          // 更新右边界\r\n          right = middle - 1;\r\n        } else if (nums[middle] < target) {\r\n          // 去右边\r\n          // 更新左边界\r\n          left = middle + 1;\r\n        } else {\r\n          return middle;\r\n        }\r\n        return -1;\r\n      }\r\n    },\r\n    changeBS() {\r\n      const nums = [2, 7, 1, 9, 11, 15];\r\n      // this.binarySearch(nums, 9);\r\n      console.info(this.binarySearch(nums, 9));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.leet-code {\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 15px;\r\n}\r\n</style>"]}]}