{"remainingRequest":"D:\\Demo\\test\\vue2-admin-element-pure\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Demo\\test\\vue2-admin-element-pure\\src\\views\\echarts\\components\\Bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Demo\\test\\vue2-admin-element-pure\\src\\views\\echarts\\components\\Bar.vue","mtime":1658714081447},{"path":"D:\\Demo\\test\\vue2-admin-element-pure\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Demo\\test\\vue2-admin-element-pure\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Demo\\test\\vue2-admin-element-pure\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Demo\\test\\vue2-admin-element-pure\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Bar.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Bar.vue","sourceRoot":"src/views/echarts/components","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"myChart\" ref=\"myChart\" v-resize=\"resize\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"barEchart\",\r\n  props: {\r\n    echartStyle: {\r\n      // 样式\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n    chartData: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    forecastRoster: {\r\n      tyle: Object,\r\n      default: {},\r\n    },\r\n    forecastName: {\r\n      tyle: Object,\r\n      default: {},\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      nameList: {\r\n        assessment: \"测报考核\",\r\n        guidePropaganda: \"指导宣传\",\r\n        train: \"学习培训\",\r\n        task: \"其他任务\",\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      let bgStyle = this.echartStyle;\r\n      let { cycle } = this.chartData;\r\n      let seriesData = []; // 每个周期数据\r\n      let xData = []; // X轴数据\r\n      cycle.forEach((item, index) => {\r\n        xData.push(`第${index + 1}周期`);\r\n      });\r\n      // 递归重装数组,Y轴数据\r\n      let yData = this.recursionForecast(cycle);\r\n      this.forecastRoster.forEach((item, index) => {\r\n        seriesData.push({\r\n          name: this.forecastName[item],\r\n          type: \"bar\",\r\n          barWidth: \"8%\", // 柱子宽度\r\n          data: yData[index],\r\n          zlevel: 11,\r\n          barGap: \"100%\", // 不同系列的柱间距离\r\n          barCategoryGap: \"20%\", // 每簇之间的间距，有barWidth会失效\r\n          itemStyle: {\r\n            // normal是柱状图的正常样式\r\n            normal: {\r\n              barBorderRadius: [10, 10, 0, 0], // （顺时针左上，右上，右下，左下）\r\n              color: this.echartStyle.barColor,\r\n              // 柱形图顶部文字\r\n              label: {\r\n                formatter: `{c} \\n\\n {a}`,\r\n                show: true,\r\n                position: \"top\",\r\n                rotate: this.title == \"task\" ? 65 : 0, // 最后一个图表文字倾斜\r\n                textStyle: {\r\n                  fontSize: \"8\",\r\n                  color: \"#fff\",\r\n                  align: \"left\",\r\n                },\r\n              },\r\n            },\r\n            // 移入当前的柱状图时改变颜色\r\n            emphasis: {\r\n              color: this.echartStyle.hoveColor,\r\n            },\r\n          },\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n          },\r\n        });\r\n      });\r\n\r\n      // 添加折线图数据\r\n      let lineData = this.sumLineData(cycle);\r\n      seriesData.unshift({\r\n        type: \"line\",\r\n        data: lineData,\r\n        color: this.echartStyle.hoveColor,\r\n        zlevel: 11,\r\n        symbol: \"roundRect\",\r\n        hoverAnimation: false,\r\n        itemStyle: {\r\n          opacity: 0.65,\r\n          borderWidth: 10,\r\n          borderColor: \"#68d786\",\r\n          borderType: \"solid\",\r\n          shadowColor: \"rgba(187, 255, 0, 1)\",\r\n          color: this.echartStyle.hoveColor,\r\n          /* normal: {\r\n            color: \"#00FF00\",\r\n          }, */\r\n        },\r\n      });\r\n\r\n      let myChart = this.$echarts.init(this.$refs.myChart);\r\n      // 指定图表的配置项和数据\r\n      let option = {\r\n        title: {\r\n          text: `${this.nameList[this.title]}得分周期情况`,\r\n          left: \"center\", // 标题居中\r\n          textStyle: {\r\n            color: \"#fff\",\r\n          },\r\n        },\r\n        // 鼠标hover效果\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            // 添加背景,展示多个当前x轴数据\r\n            type: \"shadow\",\r\n            shadowStyle: {\r\n              color: \"#0000001a\",\r\n            },\r\n            z: 0,\r\n          },\r\n          textStyle: {\r\n            fontSize: 12,\r\n          },\r\n          backgroundColor: bgStyle.hoveColor,\r\n          formatter: function (params) {\r\n            // console.log(params[params.length-1]);\r\n            let str = `<div style=\r\n                        \"background-color: ${bgStyle.hoveColor};\r\n                        padding: 0px 15px;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        text-align: center;\r\n                        color: white;\r\n                        border-radius: 5px;\"\r\n                        border: none;\r\n                        position: relative;\r\n                        >\r\n                          <p>${params[params.length - 1].data}</p>\r\n                          <p>总分</p>\r\n                          <span style=\"\r\n                            display: block;\r\n                            position:absolute;\r\n                            left:45%;\r\n                            top: 90%;\r\n                            width:10px;\r\n                            height:10px;\r\n                            background-color: ${bgStyle.hoveColor};\r\n                            transform:rotate(45deg);\r\n                            \"\r\n                            >\r\n                          </span>\r\n                        </div>`;\r\n\r\n            return str;\r\n          },\r\n          position: function (point, params, dom, rect, size) {\r\n            // 固定在顶部\r\n            return [point[0], \"10%\"];\r\n          },\r\n        },\r\n        // 图例组件\r\n        legend: {\r\n          // data: [\"销量\", \"数量\"],\r\n          show: false,\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        // 工具栏\r\n        toolbox: {\r\n          show: true,\r\n          orient: \"vertical\",\r\n          left: \"right\",\r\n          top: \"center\",\r\n        },\r\n        dataZoom: [\r\n          {\r\n            type: \"inside\",\r\n            startValue: 0,\r\n            endValue: 4,\r\n            zoomLock: false,\r\n            // disabled: true\r\n          },\r\n        ],\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            axisTick: { show: false }, // 刻度\r\n            data: xData.reverse(), // x轴数据\r\n            offset: 1, // 偏移;结合onZero: false,生效\r\n            axisLabel: {\r\n              textStyle: {\r\n                color: \"#fff\",\r\n              },\r\n            },\r\n            axisLine: {\r\n              // X轴线条样式\r\n              show: true,\r\n              onZero: false,\r\n              lineStyle: {\r\n                color: \"#fff\",\r\n                width: 1.5,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            name: \"(得分)\",\r\n\r\n            type: \"value\",\r\n            offset: 15,\r\n            axisLabel: {\r\n              textStyle: {\r\n                color: \"#fff\",\r\n              },\r\n            },\r\n            nameTextStyle: {\r\n              color: \"#fff\",\r\n            },\r\n            axisLine: {\r\n              show: false,\r\n            },\r\n            splitLine: {\r\n              // X坐标轴在 grid 区域中的分隔线。\r\n              show: true,\r\n              lineStyle: {\r\n                color: \"#f9f9f9\",\r\n                width: 0.3,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        series: seriesData.reverse(),\r\n      };\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      myChart.setOption(option);\r\n    },\r\n\r\n    // 处理返回分类数据\r\n    recursionForecast(data) {\r\n      let arr = [[], [], [], [], []];\r\n      data.forEach((item) => {\r\n        item.forEach((val, index) => {\r\n          if (this.forecastRoster.includes(val.name)) {\r\n            arr[index].push(val.number);\r\n          }\r\n        });\r\n      });\r\n      return arr;\r\n    },\r\n    // 处理返回每个周期总数seriesData数组\r\n    sumLineData(data) {\r\n      let arr = [];\r\n      data.forEach((item) => {\r\n        let s = 0;\r\n        item.forEach((val) => {\r\n          s += val.number;\r\n        }, 0);\r\n        arr.push(s);\r\n      });\r\n      return arr;\r\n    },\r\n\r\n    // 自适应图表\r\n    resize() {\r\n      this.myChart = this.$echarts.init(this.$refs.myChart);\r\n      this.myChart.resize();\r\n    },\r\n  },\r\n  //监控data中的数据变化\r\n  watch: {\r\n    chartData: {\r\n      handler(nvl, ovl) {\r\n        // console.log(nvl);\r\n        this.init();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#myChart {\r\n  height: 300px;\r\n  width: 100%;\r\n}\r\n.total-score {\r\n  background-color: #78ff8e;\r\n  padding: 10px 15px;\r\n  text-align: center;\r\n  color: white;\r\n  border-radius: 5px;\r\n}\r\n</style>"]}]}